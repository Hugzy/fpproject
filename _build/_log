### Starting build.
# Target: playground/clientexample.ml.depends, tags: { package(qcheck,cohttp-lwt-unix,cohttp,lwt), extension:ml, file:playground/clientexample.ml, ocaml, ocamldep, quiet, thread, traverse }
ocamlfind ocamldep -package qcheck,cohttp-lwt-unix,cohttp,lwt -modules playground/clientexample.ml > playground/clientexample.ml.depends
# Target: playground/clientexample.cmo, tags: { package(qcheck,cohttp-lwt-unix,cohttp,lwt), byte, compile, extension:cmo, extension:ml, file:playground/clientexample.cmo, file:playground/clientexample.ml, implem, ocaml, quiet, thread, traverse }
ocamlfind ocamlc -c -thread -package qcheck,cohttp-lwt-unix,cohttp,lwt -I playground -o playground/clientexample.cmo playground/clientexample.ml
# Target: playground/clientexample.cmx, tags: { package(qcheck,cohttp-lwt-unix,cohttp,lwt), compile, extension:cmx, extension:ml, file:playground/clientexample.cmx, file:playground/clientexample.ml, implem, native, ocaml, quiet, thread, traverse }
ocamlfind ocamlopt -c -thread -package qcheck,cohttp-lwt-unix,cohttp,lwt -I playground -o playground/clientexample.cmx playground/clientexample.ml
# Target: playground/clientexample.native, tags: { package(qcheck,cohttp-lwt-unix,cohttp,lwt), dont_link_with, extension:native, file:playground/clientexample.native, link, native, ocaml, program, quiet, thread, traverse }
ocamlfind ocamlopt -linkpkg -thread -package qcheck,cohttp-lwt-unix,cohttp,lwt -I playground playground/clientexample.cmx -o playground/clientexample.native
# Compilation successful.
